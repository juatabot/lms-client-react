{"version":3,"sources":["serviceWorker.js","components/Login.js","components/Register.js","components/Profile.js","services/CourseService.js","components/CourseRowComponent.js","components/CourseListComponent.js","services/ModuleService.js","services/LessonService.js","components/ModuleList.js","actions/moduleActions.js","components/LessonTabs.js","services/TopicService.js","components/TopicTabs.js","services/WidgetService.js","components/HeadingWidget.js","components/ParagraphWidget.js","components/WidgetList.js","components/CourseEditor.js","components/CourseManager.js","reducers/modulesReducer.js","reducers/courseReducer.js","reducers/lessonReducer.js","reducers/topicReducer.js","reducers/widgetReducer.js","index.js"],"names":["Boolean","window","location","hostname","match","Login","class","for","id","placeholder","type","href","Register","Profile","readonly","value","url","findCourseById","courseId","fetch","then","response","json","method","course","body","JSON","stringify","headers","CourseRowComponent","props","state","editing","courseTitle","updateTitle","event","newTitle","target","title","setState","updateCourse","newCourse","_id","this","onChange","to","owner","lastUpdated","className","onClick","deleteCourse","React","Component","CourseListComponent","courses","createCourse","courseService","actualCourse","prevState","catch","error","statu","filter","c","scope","map","key","moduleUrl","newModule","moduleId","lessonUrl","lessonId","newLesson","connect","modules","moduleReducer","courseReducer","dispatch","deleteModule","module","moduleService","statue","createModule","actualModule","updateModule","status","lessons","lessonReducer","deleteLesson","lessonService","createLessonForModule","lesson","updateLesson","length","e","topicUrl","newTopic","topicId","topics","topicReducer","createTopicForLesson","topicService","topic","deleteTopic","updateTopic","topicsUrl","widgetsUrl","findWidgetsForTopic","widget","widgetId","newWidget","heading","widgetReducer","editWidget","selectHeading","preview","src","rows","swapArrayElements","arr","indexA","indexB","temp","widgets","widgetType","selectType","createWidgetForTopic","widgetService","name","deleteWidget","changeSelect","updateWidget","changePreview","moveWidgetDown","order","forEach","idx","moveWidgetUp","indexOf","defaultValue","CourseEditor","params","findModulesForCourse","findLessonsForModule","findTopicsForLesson","prevProps","snapshot","actualModules","CourseManager","path","exact","component","initialState","action","sort","a","b","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.f2fa2453.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\n\nexport const Login = () =>\n  <div class=\"container\">\n\n    <h1>Sign In</h1>\n\n    <form>\n\n      <div class=\"form-group row\">\n        <label for=\"username\" class=\"col-sm-2 col-form-label\">\n          <p>Username</p>\n        </label>\n        <div class=\"col-sm-10\">\n          <input class=\"form-control wbdv-field wbdv-username\" id=\"username\" placeholder=\"Juat\" />\n        </div>\n      </div>\n\n      <div class=\"form-group row\">\n        <label for=\"password\" class=\"col-sm-2 col-form-label\">\n          Password\n    </label>\n        <div class=\"col-sm-10\">\n          <input type=\"password\" class=\"form-control wbdv-field wbdv-password\" id=\"password\" placeholder=\"123qwe#$%\" />\n        </div>\n      </div>\n\n      <div class=\"form-group row\">\n        <label for=\"\" class=\"col-sm-2 col-form-label\">\n\n        </label>\n        <div class=\"col-sm-10\">\n          <a href=\"../profile/profile.template.client.html\">\n            <button type=\"button\" class=\"btn btn-primary wbdv-button wbdv-login\">Sign in</button>\n          </a>\n\n          <button type=\"button\" class=\"btn btn-secondary\">Cancel</button>\n        </div>\n      </div>\n\n      <div class=\"form-group row\">\n        <label for=\"\" class=\"col-form-label\">\n          <div class=\"extras\">\n            <div class=\"col-12 wbdv-link wbdv-forgot-password\">\n              <a href=\"#\">Forgot Password?</a>\n            </div>\n\n            <br />\n\n            <div class=\"col-6 wbdv-link wbdv-register\">\n              <a href=\"../register/register.template.client.html\">Sign up</a>\n            </div>\n          </div>\n        </label>\n      </div>\n    </form>\n  </div>\n\n","import React from \"react\";\n\nexport const Register = () =>\n  <div class=\"container\">\n    <h1>Register</h1>\n    <div class=\"input-container\">\n      <a href=\"../index.html\"><i class=\"fas fa-window-close\"></i></a>\n      <div class=\"wbdv-field wbdv-username\">\n        <div class=\"field-name\">Username: </div>\n        <input class=\"form-control\" id=\"usernameFld\" placeholder=\"Juat\" />\n      </div>\n      <div class=\"wbdv-field wbdv-password\">\n        <div class=\"field-name\">Password: </div>\n        <input class=\"form-control\" id=\"pwdFld\" type=\"password\" />\n      </div>\n      <div class=\"wbdv-field wbdv-password-verify\">\n        <div class=\"field-name\">Confirm password: </div>\n        <input class=\"form-control\" id=\"cpwdFld\" type=\"password\" />\n      </div>\n\n      <div class=\"wbdv-button\">\n        <a href=\"../profile/profile.template.client.html\">\n          <button class=\"btn btn-primary wbdv-field wbdvregister\" id=\"updateBtn\">Sign up</button>\n        </a>\n        <a href=\"../login/login.template.client.html\">\n          <button class=\"btn btn-secondary wbdv-field wbdv-login\" id=\"logoutBtn\">Log in</button>\n        </a>\n\n      </div>\n    </div>\n  </div>\n","import React from \"react\";\n\nexport const Profile = () =>\n  <div class=\"container\">\n    <h1>Profile</h1>\n    <div class=\"input-container\">\n      <div class=\"wbdv-field wbdv-username\">\n        <div class=\"field-name\">Username: </div>\n        <input class=\"form-control\" id=\"usernameFld\" readonly value=\"Juat\" />\n      </div>\n      <div class=\"wbdv-field wbdv-password\">\n        <div class=\"field-name\">Password: </div>\n        <input type=\"password\" class=\"form-control\" id=\"phoneFld\" />\n      </div>\n      <div class=\"wbdv-field wbdv-phone\">\n        <div class=\"field-name\">Phone: </div>\n        <input class=\"form-control\" id=\"phoneFld\" />\n      </div>\n      <div class=\"wbdv-field wbdv-email\">\n        <div class=\"field-name\">Email: </div>\n        <input class=\"form-control\" id=\"emailFld\" type=\"email\" />\n      </div>\n      <div class=\"wbdv-field wbdv-dob\">\n        <div class=\"field-name\">Date of Birth: </div>\n        <input class=\"form-control\" id=\"dobFld\" type=\"date\" />\n      </div>\n      <div class=\"wbdv-field wbdv-role\">\n        <div class=\"field-name\">Role:</div>\n        <div class=\"dropdown\">\n          <select id=\"roleFld\" class=\"form-control\">\n            <option value=\"FACULTY\">Faculty</option>\n            <option value=\"STUDENT\">Student</option>\n            <option value=\"ADMIN\">Admin</option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class=\"wbdv-button wbdv-update\">\n      <a href=\"../index.html\">\n        <button class=\"btn btn-secondary wbdv-button wbdv-logout\" id=\"logoutBtn\">Logout</button>\n      </a>\n    </div>\n  </div>","const url = \"https://wbdv-generic-server.herokuapp.com/api/juat/courses\"\n\nexport const findCourseById = courseId =>\n  fetch(`${url}/${courseId}`)\n    .then(response => response.json())\n\n\nexport const findAllCourses = () =>\n  fetch(url)\n    .then(response => response.json())\n\nexport const deleteCourse = (courseId) =>\n  fetch(`${url}/${courseId}`, {\n    method: 'DELETE'\n  })\n    .then(response => response.json())\n\nexport const createCourse = (course) =>\n  fetch(url, {\n    method: 'POST',\n    body: JSON.stringify(course),\n    headers: {\n      'content-type': 'application/json'\n    }\n  })\n    .then(response => response.json())\n\nexport const updateCourse = (courseId, newCourse) =>\n  fetch(`${url}/${courseId}`, {\n    method: 'PUT',\n    body: JSON.stringify(newCourse),\n    headers: {\n      'content-type': 'application/json'\n    }\n  })\n    .then(response => response.json())\n\nexport default {\n  findAllCourses, deleteCourse, createCourse, findCourseById\n}\n","import React from \"react\";\nimport { updateCourse } from \"../services/CourseService\";\nimport { Link } from \"react-router-dom\";\n\nclass CourseRowComponent extends React.Component {\n  state = {\n    editing: false,\n    courseTitle: \"Some Course\",\n    course: this.props.course\n  }\n\n  constructor(props) {\n    super(props)\n  }\n\n  updateTitle = (event) => {\n    const newTitle = event.target.value\n    const course = { ...this.state.course }\n    course.title = newTitle\n    this.setState({\n      course: course\n    })\n  }\n\n  updateCourse = () => {\n    this.setState({ editing: false })\n    updateCourse(this.state.course._id, this.state.course)\n  }\n\n  render() {\n    return (\n      <tr>\n        <td>\n          {\n            this.state.editing === true &&\n            <input\n              onChange={this.updateTitle}\n              value={this.state.course.title} />\n          }\n          {\n            this.state.editing === false &&\n            <Link to={`/edit/${this.state.course._id}`}>\n              {this.state.course.title}\n            </Link>\n          }\n        </td>\n        <td>{this.props.course.owner}</td>\n        <td>{this.props.course.lastUpdated}</td>\n        <td>\n          <button className=\"btn btn-danger mr-1\" onClick={() => this.props.deleteCourse(this.props.course)}>\n            Delete\n          </button>\n          {\n            this.state.editing &&\n            <button className=\"btn btn-secondary mr-1\" onClick={this.updateCourse}>\n              Ok\n            </button>\n          }\n          {\n            !this.state.editing &&\n            <button className=\"btn btn-secondary mr-1\" onClick={() => this.setState({ editing: true })}>\n              Edit\n            </button>\n          }\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default CourseRowComponent\n","import React from \"react\";\nimport CourseRowComponent from \"./CourseRowComponent\";\nimport courseService from \"../services/CourseService\";\n\nclass CourseListComponent extends React.Component {\n  state = {\n    courses: []\n  }\n\n  componentDidMount() {\n    courseService.findAllCourses()\n      .then(courses => this.setState({\n        courses: courses\n      }))\n  }\n\n  createCourse = () => {\n    const newCourse = {\n      title: 'New Course',\n      owner: 'me',\n      lastUpdated: 'yesterday'\n    }\n\n    courseService.createCourse(newCourse)\n      .then(actualCourse => this.setState(function (prevState) {\n        return {\n          courses: [\n            ...prevState.courses, actualCourse\n          ]\n        }\n      })\n      )\n      .catch(error => { })\n  }\n\n  deleteCourse = (course) => {\n    courseService.deleteCourse(course._id)\n      .then(statu => this.setState(prevState => ({\n        courses: prevState.courses.filter(c => c._id !== course._id)\n      })))\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <button\n          onClick={this.createCourse}\n          className=\"btn btn-success float-right\">\n          Create Course\n        </button>\n        <h1>Course List</h1>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Title</th>\n              <th scope=\"col\">Owner</th>\n              <th scope=\"col\">Last Modified</th>\n              <th scope=\"col\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              this.state.courses.map(course =>\n                <CourseRowComponent\n                  key={course._id}\n                  deleteCourse={this.deleteCourse}\n                  course={course} />\n              )\n            }\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nexport default CourseListComponent\n","const url = \"https://wbdv-generic-server.herokuapp.com/api/juat/courses\"\nconst moduleUrl = \"https://wbdv-generic-server.herokuapp.com/api/juat/modules\"\n\nexport const updateModule = (moduleId, newModule) =>\n  fetch(`${moduleUrl}/${moduleId}`, {\n    method: \"PUT\",\n    body: JSON.stringify(newModule),\n    headers: {\n      \"content-type\": \"application/json\"\n    }\n  })\n    .then(response => response.json())\n\nexport const deleteModule = (moduleId) =>\n  fetch(`${moduleUrl}/${moduleId}`, {\n    method: \"DELETE\"\n  })\n    .then(response => response.json())\n\nexport const findModulesForCourse = (courseId) =>\n  fetch(`${url}/${courseId}/modules`)\n    .then(response => response.json())\n\nexport const createModuleForCourse = (courseId, newModule) =>\n  fetch(`${url}/${courseId}/modules`, {\n    method: \"POST\",\n    body: JSON.stringify(newModule),\n    headers: {\n      \"content-type\": \"application/json\"\n    }\n  })\n    .then(response => response.json())\n\nexport default {\n  findModulesForCourse,\n  createModuleForCourse,\n  deleteModule,\n  updateModule\n}\n","const moduleUrl = \"https://wbdv-generic-server.herokuapp.com/api/juat/modules\"\nconst lessonUrl = \"https://wbdv-generic-server.herokuapp.com/api/juat/lessons\"\n\nexport const findLessonsForModule = (moduleId) =>\n  fetch(`${moduleUrl}/${moduleId}/lessons`)\n    .then(response => response.json())\n\nexport const deleteLesson = (lessonId) =>\n  fetch(`${lessonUrl}/${lessonId}`, {\n    method: \"DELETE\"\n  })\n    .then(response => response.json())\n\nexport const createLessonForModule = (moduleId, newLesson) =>\n  fetch(`${moduleUrl}/${moduleId}/lessons`, {\n    method: \"POST\",\n    body: JSON.stringify(newLesson),\n    headers: {\n      \"content-type\": \"application/json\"\n    }\n  }).then(response => response.json())\n\nexport const updateLesson = (newLesson) =>\n  fetch(`${lessonUrl}/${newLesson._id}`, {\n    method: \"PUT\",\n    body: JSON.stringify(newLesson),\n    headers: {\n      \"content-type\": \"application/json\"\n    }\n  }).then(response => response.json())\n\nexport default {\n  findLessonsForModule,\n  deleteLesson,\n  createLessonForModule,\n  updateLesson\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  DELETE_MODULE,\n  CREATE_MODULE,\n  UPDATE_MODULE,\n  updateModule,\n  createModule,\n  deleteModule\n} from \"../actions/moduleActions\";\nimport { Link } from \"react-router-dom\";\n\nconst ModuleList = (\n  { course,\n    modules = [],\n    deleteModule,\n    createModule,\n    updateModule }) =>\n\n  <div className=\"card\">\n    <ul className=\"list-group-flush\">\n      <h1>{course.title}</h1>\n      {\n        modules.map(module =>\n          <li className=\"list-group-item\" key={module._id}>\n            <button\n              className=\"btn btn-danger mr-1\"\n              onClick={() => deleteModule(module)}>\n              Delete\n          </button>\n            {\n              module.editing &&\n              <span>\n                <button className=\"btn btn-secondary mr-1\" onClick={() =>\n                  updateModule({ ...module, editing: false })\n                }>\n                  Ok\n                </button>\n                <input\n                  onChange={(event) =>\n                    updateModule({ ...module, title: event.target.value })\n                  }\n                  value={module.title} />\n              </span>\n            }\n            {\n              !module.editing &&\n              <span>\n                <button className=\"btn btn-secondary mr-1\" onClick={\n                  () => updateModule({ ...module, editing: true })}>\n                  Edit\n                </button>\n                <Link to={`/edit/${course._id}/modules/${module._id}`}>\n                  {module.title}\n                </Link>\n              </span>\n            }\n          </li>)\n      }\n    </ul>\n    <button className=\"btn btn-success\" onClick={() => createModule(course, { title: \"New Module\" })}>\n      Create Module\n    </button>\n  </div>\n\nconst stateToPropertyMapper = (state) => ({\n  modules: state.moduleReducer.modules,\n  course: state.courseReducer.course\n})\n\nconst propertyToDispatchMapper = (dispatch) => ({\n  deleteModule: (module) => deleteModule(dispatch, module),\n  createModule: (course, module) => createModule(dispatch, course, module),\n  updateModule: (module) => updateModule(dispatch, module)\n})\n\nexport default connect\n  (stateToPropertyMapper,\n    propertyToDispatchMapper)\n  (ModuleList)\n","import moduleService from \"../services/ModuleService\"\nexport const DELETE_MODULE = \"DELETE_MODULE\"\nexport const UPDATE_MODULE = \"UPDATE_MODULE\"\nexport const CREATE_MODULE = \"CREATE_MODULE\"\n\nexport const deleteModule = (dispatch, module) =>\n  moduleService.deleteModule(module._id)\n    .then(statue =>   dispatch({\n        type: DELETE_MODULE,\n        module: module\n      })\n    )\n\nexport const updateModule = (dispatch, module) =>\n  moduleService.updateModule(module._id, module)\n    .then(status => dispatch({\n        type: UPDATE_MODULE,\n        module\n      })\n    )\n\nexport const createModule = (dispatch, course, module) =>\n  moduleService.createModuleForCourse(course._id, module)\n    .then(actualModule => dispatch({\n      type: CREATE_MODULE,\n      module: actualModule\n    }))\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport lessonService from \"../services/LessonService\"\nimport { Link } from \"react-router-dom\";\n\n\nconst LessonTabs = (\n  {\n    course,\n    lessons = [],\n    deleteLesson,\n    createLessonForModule,\n    moduleId,\n    updateLesson,\n  }) =>\n  <div className=\"card\">\n    <ul className=\"list-group-flush\">\n      <h2>Lessons ({lessons.length})</h2>\n      {\n        lessons.map(lesson =>\n          <li className=\"list-group-item\" key={lesson._id}>\n            <button className=\"btn btn-danger mr-1\" onClick={() => deleteLesson(lesson._id)}>\n              X\n            </button>\n            {\n              !lesson.editing &&\n              <span>\n                <button className=\"btn btn-secondary mr-1\" onClick={() => updateLesson({ ...lesson, editing: true })}>\n                  Edit\n                </button>\n                <Link to={`/edit/${course._id}/modules/${moduleId}/lessons/${lesson._id}`}>\n                  {lesson.title}\n                </Link>\n              </span>\n            }\n            {\n\n              lesson.editing &&\n              <span>\n                <button className=\"btn btn-secondary mr-1\" onClick={() => updateLesson({ ...lesson, editing: false })}>\n                  Ok\n            </button>\n                <input\n                  onChange={(e) => updateLesson({ ...lesson, title: e.target.value })}\n                  value={lesson.title} />\n              </span>\n            }\n          </li>\n        )\n      }\n      <button className=\"btn btn-success\" onClick={() =>\n        createLessonForModule(moduleId)}>\n        Create\n    </button>\n    </ul>\n  </div>\n\nconst stateToPropertyMapper = (state) => ({\n  course: state.courseReducer.course,\n  lessons: state.lessonReducer.lessons,\n  moduleId: state.lessonReducer.moduleId\n})\n\nconst dispatchToPropertyMapper = (dispatch) => ({\n  deleteLesson: (lessonId) =>\n    lessonService.deleteLesson(lessonId)\n      .then(status => dispatch({\n        type: \"DELETE_LESSON\",\n        lessonId\n      })),\n  createLessonForModule: (moduleId) =>\n    lessonService\n      .createLessonForModule(moduleId, { title: \"New Lesson\" })\n      .then(lesson => dispatch({\n        type: \"CREATE_LESSON\",\n        lesson\n      })),\n  updateLesson: (lesson) =>\n    lessonService.updateLesson(lesson)\n      .then(status => dispatch({\n        type: \"UPDATE_LESSON\",\n        lesson\n      })),\n})\n\nexport default connect\n  (stateToPropertyMapper, dispatchToPropertyMapper)\n  (LessonTabs)\n","const lessonUrl = \"https://wbdv-generic-server.herokuapp.com/api/juat/lessons\"\nconst topicUrl = \"https://wbdv-generic-server.herokuapp.com/api/juat/topics\"\n\nexport const updateTopic = (newTopic) =>\n    fetch(`${topicUrl}/${newTopic._id}`, {\n        method: \"PUT\",\n        body: JSON.stringify(newTopic),\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    }).then(response => response.json())\n\nexport const findTopicsForLesson = (lessonId) =>\n    fetch(`${lessonUrl}/${lessonId}/topics`)\n        .then(response => response.json())\n\nexport const createTopicForLesson = (lessonId, newTopic) =>\n    fetch(`${lessonUrl}/${lessonId}/topics`, {\n        method: \"POST\",\n        body: JSON.stringify(newTopic),\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    }).then(response => response.json())\n\nexport const deleteTopic = (topicId) =>\n    fetch(`${topicUrl}/${topicId}`, {\n        method: \"DELETE\"\n    }).then(response => response.json())\n\nexport default {\n    findTopicsForLesson,\n    createTopicForLesson,\n    deleteTopic,\n    updateTopic,\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport topicService from \"../services/TopicService\";\nimport { Link } from \"react-router-dom\";\n\nconst TopicTabs = (\n    {\n        course,\n        moduleId,\n        lessonId,\n        createTopicForLesson,\n        topics = [],\n        deleteTopic,\n        updateTopic,\n    }) =>\n    <div className=\"card\">\n        <ul className=\"list-group-flush\">\n            <h2>Topics ({topics.length})</h2>\n            {\n                topics.map(topic =>\n                    <li className=\"list-group-item\" key={topic._id}>\n                        <button className=\"btn btn-danger mr-1\" onClick={() => deleteTopic(topic._id)}>\n                            Delete\n                         </button>\n                        {\n                            !topic.editing &&\n                            <span>\n                                <button className=\"btn btn-secondary mr-1\" onClick={() => updateTopic({ ...topic, editing: true })}>\n                                    Edit\n                                </button>\n                                <Link to={`/edit/${course._id}/modules/${moduleId}/lessons/${lessonId}/topics/${topic._id}`}>\n                                    {topic.title}\n                                </Link>\n                            </span>\n                        }\n                        {\n                            topic.editing &&\n                            <span>\n                                <button className=\"btn btn-secondary mr-1\" onClick={() => updateTopic({ ...topic, editing: false })}>\n                                    Ok\n                                </button>\n                                <input\n                                    onChange={(e) => updateTopic({ ...topic, title: e.target.value })}\n                                    value={topic.title} />\n                            </span>\n                        }\n                    </li>\n                )\n            }\n            <button className=\"btn btn-success\" onClick={() =>\n                createTopicForLesson(lessonId, { \"title\": \"New Module\" })}>\n                Create\n        </button>\n        </ul>\n    </div>\n\nconst stateToPropertyMapper = (state) => ({\n    topics: state.topicReducer.topics,\n    lessonId: state.topicReducer.lessonId,\n    course: state.courseReducer.course,\n    moduleId: state.lessonReducer.moduleId\n})\n\nconst dispatchToPropertyMapper = (dispatch) => ({\n    createTopicForLesson: (lessonId) =>\n        topicService\n            .createTopicForLesson(lessonId, { title: \"New Topic\" })\n            .then(topic => dispatch({\n                type: \"CREATE_TOPIC\",\n                topic,\n                lessonId\n            })),\n    deleteTopic: (topicId) =>\n        topicService.deleteTopic(topicId)\n            .then(status => dispatch({\n                type: \"DELETE_TOPIC\",\n                topicId\n            })),\n    updateTopic: (topic) =>\n        topicService.updateTopic(topic)\n            .then(status => dispatch({\n                type: \"UPDATE_TOPIC\",\n                topic\n            })),\n})\n\nexport default connect\n    (stateToPropertyMapper, dispatchToPropertyMapper)\n    (TopicTabs)\n","const topicsUrl = \"http://localhost:8080/api/topics\"\nconst widgetsUrl = \"http://localhost:8080/api/widgets\"\n\nexport const findWidgetsForTopic = (topicId) =>\n  fetch(`${topicsUrl}/${topicId}/widgets`)\n    .then(response => response.json())\n\nexport const createWidgetForTopic = (topicId, widget) =>\n  fetch(`${topicsUrl}/${topicId}/widgets`,\n    {\n      method: \"POST\",\n      body: JSON.stringify({\n        ...widget,\n        topicId\n      }),\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    })\n    .then(response => response.json())\n\nexport const deleteWidget = (widgetId) =>\n  fetch(`${widgetsUrl}/${widgetId}`, {\n    method: \"DELETE\"\n  })\n\nexport const updateWidget = (newWidget) =>\n  fetch(`${widgetsUrl}/${newWidget.id}`, {\n    method: \"PUT\",\n    body: JSON.stringify(newWidget),\n    headers: {\n      \"content-type\": \"application/json\"\n    }\n  }).then(response => response.json())\n\nexport default {\n  findWidgetsForTopic, createWidgetForTopic, deleteWidget, updateWidget\n}","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport widgetService from \"../services/WidgetService\"\n\n\nconst HeadingWidget = ({ widget, preview, editWidget, selectHeading, heading }) =>\n  <div className=\"input-group\">\n    {preview && heading === \"h1\" ? <h1>{widget.src}</h1> : null}\n    {preview && heading === \"h2\" ? <h2>{widget.src}</h2> : null}\n    {preview && heading === \"h3\" ? <h3>{widget.src}</h3> : null}\n    {!preview &&\n      <div><input\n        id=\"input-area\"\n        type=\"text\"\n        class=\"form-control\"\n        value={widget.src}\n        onChange={(e) => editWidget({ ...widget, src: e.target.value })} />\n        <div className=\"input-group-append\">\n          <select className=\"btn\" onChange={(e) => selectHeading(e.target.value)}>\n            <option value=\"h1\">Heading 1</option>\n            <option value=\"h2\">Heading 2</option>\n            <option value=\"h3\">Heading 3</option>\n          </select>\n        </div></div>}\n  </div>\n\n\n\nconst stateToPropMapper = (state) => ({\n  heading: state.widgetReducer.heading,\n})\n\nconst dispatchToPropertyMapper = (dispatch) => ({\n  editWidget: (widget) =>\n    dispatch({\n      type: \"EDIT_WIDGET\",\n      widget\n    }),\n  selectHeading: (heading) =>\n    dispatch({\n      type: \"SELECT_HEADING\",\n      heading,\n    })\n})\n\nexport default connect\n  (stateToPropMapper, dispatchToPropertyMapper)\n  (HeadingWidget)\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\n\nconst ParagraphWidget = ({ widget, preview, editWidget }) =>\n  <div className=\"form-group\">\n    {preview && <text>{widget.src}</text>}\n    {!preview &&\n      <textarea\n        className=\"form-control\"\n        id=\"exampleFormControlTextarea1\"\n        rows=\"3\"\n        value={widget.src}\n        onChange={(e) => editWidget({ ...widget, src: e.target.value })}\n      ></textarea>}\n\n  </div>\n\nconst dispatchToPropertyMapper = (dispatch) => ({\n  editWidget: (widget) =>\n    dispatch({\n      type: \"EDIT_WIDGET\",\n      widget\n    })\n})\n\nexport default connect\n  (null, dispatchToPropertyMapper)\n  (ParagraphWidget)","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport TopicService from \"../services/TopicService\";\nimport widgetService, { updateWidget } from \"../services/WidgetService\"\nimport HeadingWidget from \"./HeadingWidget\";\nimport ParagraphWidget from \"./ParagraphWidget\";\n\nconst WidgetList = (\n  {\n    widgets = [],\n    topicId,\n    createWidgetForTopic,\n    deleteWidget,\n    changeSelect,\n    selectType,\n    updateWidget,\n    changePreview,\n    preview,\n    moveWidgetUp,\n    moveWidgetDown,\n  }) =>\n  <div className=\"card\">\n    <ul className=\"list-group-flush\">\n      <h2>Widgets ({widgets.length})</h2>\n      <form>\n        <div className=\"form-row\">\n          <div className=\"col\">\n            <button className=\"btn btn-success\" onClick={\n              () => widgets.forEach(widget => updateWidget(widget))}>\n              Save\n            </button>\n          </div>\n          <div className=\"col\">\n            <div class=\"form-check\">\n              <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" onChange={() => changePreview()} />\n                Preview\n            </div>\n          </div>\n        </div>\n      </form>\n\n      {\n        widgets.map(widget =>\n\n          <li className=\"list-group-item\" key={widget.id}>\n            {!preview &&\n              <div>\n                {\n                  widgets.indexOf(widget) > 0 &&\n                  <button className=\"btn btn-danger mr-1\" onClick={() => moveWidgetUp(widgets, widget)}>\n                    Up\n                  </button>\n                }\n                {\n                  widgets.indexOf(widget) < widgets.length - 1 &&\n                  <button className=\"btn btn-danger mr-1\" onClick={() => moveWidgetDown(widgets, widget)}>\n                    Down\n                  </button>\n                }\n                <button className=\"btn btn-danger mr-1\" onClick={() => deleteWidget(widget.id)}>\n                  Delete\n                </button>\n              </div>}\n            {\n              widget.type === \"HEADING\" &&\n              <HeadingWidget widget={widget} preview={preview} />\n            }\n            {\n              widget.type === \"PARAGRAPH\" &&\n              <ParagraphWidget widget={widget} preview={preview} />\n            }\n          </li>\n        )\n      }\n      {!preview &&\n        <div>\n          <select className=\"btn\" defaultValue=\"heading\" onClick={() => changeSelect()}>\n            <option value=\"paragraph\">Paragraph</option>\n            <option value=\"heading\">Heading</option>\n          </select>\n          <button className=\"btn btn-success\" onClick={\n            () => createWidgetForTopic(topicId, selectType)}>\n            Create\n          </button>\n        </div>}\n    </ul>\n  </div>\n\nconst stateToPropMapper = (state) => ({\n  widgets: state.widgetReducer.widgets,\n  topicId: state.widgetReducer.topicId,\n  widgetType: state.widgetReducer.widgetType,\n  selectType: state.widgetReducer.selectType,\n  preview: state.widgetReducer.preview,\n})\n\nvar swapArrayElements = function (arr, indexA, indexB) {\n  var temp = arr[indexA];\n  arr[indexA] = arr[indexB];\n  arr[indexB] = temp;\n}\n\nconst dispatchToPropertyMapper = (dispatch) => ({\n  createWidgetForTopic: (topicId, selectType) =>\n    widgetService.createWidgetForTopic(topicId, {\n      name: \"NEW WIDGET\",\n      type: selectType,\n    }).then(widget => dispatch({\n      type: \"CREATE_WIDGET_FOR_TOPIC\",\n      widget,\n    })),\n  deleteWidget: (widgetId) =>\n    widgetService.deleteWidget(widgetId)\n      .then(status => dispatch({\n        type: \"DELETE_WIDGET\",\n        widgetId,\n      })),\n  changeSelect: () =>\n    dispatch({\n      type: \"CHANGE_SELECT\",\n    }),\n  updateWidget: (widget) =>\n    widgetService.updateWidget(widget)\n      .then(status => dispatch({\n        type: \"UPDATE_WIDGET\",\n        widget,\n      })),\n  changePreview: () =>\n    dispatch({\n      type: \"CHANGE_PREVIEW\"\n    }),\n  moveWidgetDown: (widgets, widget) => {\n    swapArrayElements(widgets, widget.order, widget.order + 1);\n    widgets.forEach((widget, idx) => widget.order = idx);\n    widgetService.updateWidget(widget);\n    dispatch({\n      type: \"REODER_WIDGETS\",\n      widgets,\n    })\n  },\n  moveWidgetUp: (widgets, widget) => {\n    swapArrayElements(widgets, widget.order, widget.order - 1);\n    widgets.forEach((widget, idx) => widget.order = idx);\n    widgetService.updateWidget(widget);\n    dispatch({\n      type: \"REODER_WIDGETS\",\n      widgets,\n    })\n  },\n})\n\nexport default connect\n  (stateToPropMapper, dispatchToPropertyMapper)\n  (WidgetList)","import React from \"react\";\nimport { findCourseById } from \"../services/CourseService\";\nimport moduleService from \"../services/ModuleService\";\nimport lessonService from \"../services/LessonService\"\nimport ModuleList from \"./ModuleList\";\nimport LessonTabs from \"./LessonTabs\";\nimport TopicTabs from \"./TopicTabs\";\nimport { connect } from \"react-redux\";\nimport topicService from \"../services/TopicService\";\nimport { findWidgetsForTopic } from \"../services/WidgetService\"\nimport WidgetList from \"./WidgetList\";\n\n\nclass CourseEditor extends React.Component {\n\n  state = {\n    course: {\n      title: \"\",\n      _id: \"\"\n    }\n  }\n\n  componentDidMount() {\n    const courseId = this.props.match.params.courseId;\n    const moduleId = this.props.match.params.moduleId;\n    const lessonId = this.props.match.params.lessonId;\n    const topicId = this.props.match.params.topicId;\n\n    this.props.findCourseById(courseId)\n    this.props.findModulesForCourse(courseId)\n\n    if (moduleId) {\n      this.props.findLessonsForModule(moduleId)\n    }\n    if (lessonId) {\n      this.props.findTopicsForLesson(lessonId);\n    }\n    if (topicId) {\n      this.props.findWidgetsForTopic(topicId);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const moduleId = this.props.match.params.moduleId;\n    const previousModuleId = prevProps.match.params.moduleId;\n    if (moduleId !== previousModuleId) {\n      this.props.findLessonsForModule(moduleId);\n    }\n\n    const lessonId = this.props.match.params.lessonId;\n    const previousLessonId = prevProps.match.params.lessonId;\n    if (lessonId !== previousLessonId) {\n      this.props.findTopicsForLesson(lessonId);\n    }\n\n    const topicId = this.props.match.params.topicId;\n    const previousTopicId = prevProps.match.params.topicId;\n    if (topicId !== previousTopicId) {\n      this.props.findWidgetsForTopic(topicId);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-4\">\n            <ModuleList />\n          </div>\n          <div className=\"col-8\">\n            <LessonTabs />\n            <TopicTabs />\n            <WidgetList />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst stateToProperty = (state) => ({\n  course: state.courseReducer.course\n})\nconst propertyToDispatchMapper = (dispatch) => ({\n  findTopicsForLesson: (lessonId) =>\n    topicService\n      .findTopicsForLesson(lessonId)\n      .then(topics => dispatch({\n        type: \"FIND_TOPICS_FOR_LESSON\",\n        topics, topics,\n        lessonId\n      })),\n  findLessonsForModule: moduleId => {\n    lessonService.findLessonsForModule(moduleId)\n      .then(lessons => dispatch({\n        type: \"FIND_LESSONS_FOR_MODULE\",\n        lessons: lessons,\n        moduleId: moduleId\n      }))\n  },\n  findModulesForCourse: courseId =>\n    moduleService.findModulesForCourse(courseId)\n      .then(actualModules => dispatch({\n        type: \"FIND_MODULES_FOR_COURSE\",\n        modules: actualModules\n      })),\n  findCourseById: (courseId) => findCourseById(courseId)\n    .then(actualCourse => dispatch({\n      type: \"FIND_COURSE_BY_ID\",\n      course: actualCourse\n    })),\n  findWidgetsForTopic: (topicId) =>\n    findWidgetsForTopic(topicId)\n      .then(widgets => dispatch({\n        type: \"FIND_WIDGETS_FOR_TOPIC\",\n        widgets,\n        topicId\n      }))\n})\n\nexport default connect\n  (stateToProperty, propertyToDispatchMapper)\n  (CourseEditor)\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Login } from \"./Login\";\nimport { Register } from \"./Register\";\nimport { Profile } from \"./Profile\";\nimport CourseListComponent from \"./CourseListComponent\";\nimport CourseEditor from \"./CourseEditor\";\n\nexport class CourseManager extends React.Component {\n  render() {\n    return (\n      <Router>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <ul className=\"navbar-nav mr-auto\">\n            <Link className=\"nav-item active nav-link\" to=\"/login\">Login</Link>\n            <Link className=\"nav-item active nav-link\" to=\"/register\">Register</Link>\n            <Link className=\"nav-item active nav-link\" to=\"/profile\">Profile</Link>\n            <Link className=\"nav-item active nav-link\" to=\"/courses\">Course List</Link>\n          </ul>\n        </nav>\n\n        <Route path=\"/login\" exact component={Login} />\n        <Route path=\"/register\" exact component={Register} />\n        <Route path=\"/profile\" exact component={Profile} />\n        <Route path=\"/courses\" exact component={CourseListComponent} />\n        <Route path={[\n          \"/edit/:courseId\",\n          \"/edit/:courseId/modules/:moduleId\",\n          \"/edit/:courseId/modules/:moduleId/lessons/:lessonId\",\n          \"/edit/:courseId/modules/:moduleId/lessons/:lessonId/topics/:topicId\",\n        ]}\n          exact\n          component={CourseEditor} />\n\n      </Router>\n    )\n  }\n}\n","import {\n  DELETE_MODULE,\n  UPDATE_MODULE,\n  CREATE_MODULE\n} from \"../actions/moduleActions\";\n\nconst initialState = {\n  modules: []\n}\n\nconst moduleReducer = (state=initialState, action) => {\n  switch (action.type) {\n    case \"FIND_MODULES_FOR_COURSE\":\n      return {\n        modules: action.modules\n      }\n    case CREATE_MODULE:\n      return {\n        modules: [\n          ...state.modules,\n          action.module\n          ]\n      }\n    case DELETE_MODULE:\n      return {\n        modules: state.modules.filter(module => module._id !== action.module._id)\n      }\n    case UPDATE_MODULE:\n      return {\n        modules: state.modules.map(module => module._id === action.module._id ? action.module : module)\n      }\n    default:\n      return state\n  }\n}\n\nexport default moduleReducer\n","const initialState = {\n  courses: [],\n  course: {}\n}\n\nconst courseReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case \"FIND_COURSE_BY_ID\":\n      return {\n        ...state,\n        course: action.course\n      }\n    default:\n      return state\n  }\n}\n\nexport default courseReducer\n","const initialState = {\n  lessons: [],\n  lesson: {}\n}\n\nexport const lessonReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"UPDATE_LESSON\":\n      return {\n        ...state,\n        lessons:\n          state.lessons\n            .map(lesson =>\n              lesson._id === action.lesson._id ?\n                action.lesson : lesson)\n      }\n    case \"CREATE_LESSON\":\n      return {\n        ...state,\n        lessons: [\n          ...state.lessons,\n          action.lesson\n        ]\n      }\n    case \"DELETE_LESSON\":\n      return {\n        ...state,\n        lessons: state.lessons.filter(lesson => lesson._id !== action.lessonId)\n      }\n    case \"FIND_LESSONS_FOR_MODULE\":\n      return {\n        ...state,\n        lessons: action.lessons,\n        moduleId: action.moduleId\n      }\n    default:\n      return state\n  }\n}\n","const initialState = {\n    topics: [],\n    topic: {}\n}\n\nexport const topicReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"UPDATE_TOPIC\":\n            return {\n                ...state,\n                topics: state\n                    .topics\n                    .map(topic =>\n                        topic._id === action.topic._id ?\n                            action.topic : topic)\n            }\n        case \"FIND_TOPICS_FOR_LESSON\":\n            return {\n                topics: action.topics,\n                lessonId: action.lessonId\n            }\n        case \"CREATE_TOPIC\":\n            return {\n                ...state,\n                topics: [\n                    ...state.topics,\n                    action.topic\n                ],\n                lessonId: action.lessonId\n            }\n        case \"DELETE_TOPIC\":\n            return {\n                ...state,\n                topics: state.topics.filter(topic => topic._id !== action.topicId)\n            }\n        default:\n            return state\n    }\n}\n","const initialState = {\n  widgets: [],\n  widget: {},\n  selectType: \"HEADING\",\n  preview: false,\n  heading: \"h1\"\n}\n\nconst widgetReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CREATE_WIDGET_FOR_TOPIC\":\n      return {\n        ...state,\n        widgets: [\n          ...state.widgets,\n          action.widget\n        ]\n      }\n    case \"FIND_WIDGETS_FOR_TOPIC\":\n      return {\n        ...state,\n        widgets: action.widgets,\n        topicId: action.topicId\n      }\n    case \"DELETE_WIDGET\":\n      return {\n        ...state,\n        widgets: state.widgets.filter(widget => widget.id !== action.widgetId)\n      }\n    case \"CHANGE_SELECT\":\n      return {\n        ...state,\n        selectType: state.selectType === \"HEADING\" ? \"PARAGRAPH\" : \"HEADING\"\n      }\n    case \"CHANGE_PREVIEW\":\n      return {\n        ...state,\n        preview: !state.preview\n      }\n    case \"EDIT_WIDGET\":\n      return {\n        ...state,\n        widgets:\n          state.widgets\n            .map(widget =>\n              widget.id === action.widget.id ?\n                action.widget : widget)\n      }\n    case \"UPDATE_WIDGET\":\n      return {\n        ...state,\n        widgets:\n          state.widgets\n            .map(widget =>\n              widget.id === action.widget.id ?\n                action.widget : widget)\n      }\n    case \"SELECT_HEADING\":\n      return {\n        ...state,\n        heading: action.heading\n      }\n    case \"REODER_WIDGETS\":\n      return {\n        ...state,\n        widgets: [...action.widgets.sort((a, b) => {\n          if (a.order < b.order) return -1;\n          if (a.order > b.order) return 1;\n          return 0;\n        })]\n      }\n    default:\n      return state\n  }\n}\n\nexport default widgetReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport * as serviceWorker from './serviceWorker';\nimport { CourseManager } from \"./components/CourseManager\";\nimport { combineReducers, createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport moduleReducer from \"./reducers/modulesReducer\";\nimport courseReducer from \"./reducers/courseReducer\";\nimport { lessonReducer } from \"./reducers/lessonReducer\";\nimport { topicReducer } from \"./reducers/topicReducer\";\nimport widgetReducer from \"./reducers/widgetReducer\";\n\n\nconst rootReducer = combineReducers({\n  moduleReducer,\n  courseReducer,\n  lessonReducer,\n  topicReducer,\n  widgetReducer\n})\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <CourseManager />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}